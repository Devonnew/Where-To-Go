{"ast":null,"code":"var _jsxFileName = \"/home/devonnew/FullStack_SR_Phase/Where-To-Go/src/App.js\";\nimport React from \"react\";\nimport ReactMapboxGl, { Layer, Feature, GeoJSONLayer } from \"react-mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { stores } from \"./vibes\";\nimport Sidebar from \"./SideBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiZGV2b25uZXciLCJhIjoiY2t0bThqZWhiMGRxNzJvbDJwazZzOWtuNCJ9.90vA89Cc_lrejzYlkLhsfw\"\n});\n_c = Map;\nconst circleLayout = {\n  visibility: \"visible\"\n};\nconst circlePaint = {\n  \"circle-color\": \"white\"\n};\nconst symbolLayout = {\n  \"text-field\": \"{place}\",\n  \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n  \"text-offset\": [0, 0.6],\n  \"text-anchor\": \"top\"\n};\nconst symbolPaint = {\n  \"text-color\": \"white\"\n};\nexport default class App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.center = [-73.935242, 40.73061];\n\n    this.onClickCircle = evt => {\n      console.log(evt);\n    };\n\n    this.state = {\n      lng: -73.935242,\n      lat: 40.73061,\n      zoom: 11.2\n    };\n    this.onClickCircle = this.onClickCircle.bind(this);\n  }\n\n  // componentDidMount() {\n  //   const { lng, lat, zoom } = this.state;\n  //   const map = new mapboxgl.Map({\n  //     container: this.mapContainer.current,\n  //     style: \"mapbox://styles/mapbox/dark-v10\",\n  //     center: [lng, lat],\n  //     zoom: zoom,\n  //   });\n  //   map.on(\"move\", () => {\n  //     this.setState({\n  //       lng: map.getCenter().lng.toFixed(4),\n  //       lat: map.getCenter().lat.toFixed(4),\n  //       zoom: map.getZoom().toFixed(2),\n  //     });\n  //   });\n  //   map.addControl(\n  //     new mapboxgl.GeolocateControl({\n  //       positionOptions: {\n  //         enableHighAccuracy: true,\n  //       },\n  //       trackUserLocation: true,\n  //       showUserHeading: true,\n  //     })\n  //   );\n  //   map.on(\"load\", () => {\n  //     /* Add the data to your map as a layer */\n  //     map.addLayer({\n  //       id: \"locations\",\n  //       type: \"circle\",\n  //       source: {\n  //         type: \"geojson\",\n  //         data: stores,\n  //       },\n  //     });\n  //   });\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          style: \"mapbox://styles/mapbox/dark-v10\",\n          containerStyle: {\n            height: \"100vh\",\n            width: \"100vw\"\n          },\n          center: [this.state.lng, this.state.lat],\n          zoom: [11.2],\n          children: /*#__PURE__*/_jsxDEV(GeoJSONLayer, {\n            data: stores,\n            circleLayout: circleLayout,\n            circlePaint: circlePaint,\n            circleOnClick: this.onClickCircle,\n            symbolLayout: symbolLayout,\n            symbolPaint: symbolPaint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/devonnew/FullStack_SR_Phase/Where-To-Go/src/App.js"],"names":["React","ReactMapboxGl","Layer","Feature","GeoJSONLayer","stores","Sidebar","Map","accessToken","circleLayout","visibility","circlePaint","symbolLayout","symbolPaint","App","PureComponent","constructor","props","center","onClickCircle","evt","console","log","state","lng","lat","zoom","bind","render","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,IAAwBC,KAAxB,EAA+BC,OAA/B,EAAwCC,YAAxC,QAA4D,iBAA5D;AACA,OAAO,8BAAP;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAG,GAAGN,aAAa,CAAC;AACxBO,EAAAA,WAAW,EACT;AAFsB,CAAD,CAAzB;KAAMD,G;AAKN,MAAME,YAAY,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAArB;AACA,MAAMC,WAAW,GAAG;AAClB,kBAAgB;AADE,CAApB;AAIA,MAAMC,YAAY,GAAG;AACnB,gBAAc,SADK;AAEnB,eAAa,CAAC,oBAAD,EAAuB,uBAAvB,CAFM;AAGnB,iBAAe,CAAC,CAAD,EAAI,GAAJ,CAHI;AAInB,iBAAe;AAJI,CAArB;AAMA,MAAMC,WAAW,GAAG;AAClB,gBAAc;AADI,CAApB;AAIA,eAAe,MAAMC,GAAN,SAAkBd,KAAK,CAACe,aAAxB,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SASnBC,MATmB,GASV,CAAC,CAAC,SAAF,EAAa,QAAb,CATU;;AAAA,SAWnBC,aAXmB,GAWFC,GAAD,IAAS;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAbkB;;AAEjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CAAC,SADK;AAEXC,MAAAA,GAAG,EAAE,QAFM;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKA,SAAKP,aAAL,GAAqB,KAAKA,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,GAAD;AACE,UAAA,KAAK,EAAC,iCADR;AAEE,UAAA,cAAc,EAAE;AACdC,YAAAA,MAAM,EAAE,OADM;AAEdC,YAAAA,KAAK,EAAE;AAFO,WAFlB;AAME,UAAA,MAAM,EAAE,CAAC,KAAKP,KAAL,CAAWC,GAAZ,EAAiB,KAAKD,KAAL,CAAWE,GAA5B,CANV;AAOE,UAAA,IAAI,EAAE,CAAC,IAAD,CAPR;AAAA,iCASE,QAAC,YAAD;AACE,YAAA,IAAI,EAAEpB,MADR;AAEE,YAAA,YAAY,EAAEI,YAFhB;AAGE,YAAA,WAAW,EAAEE,WAHf;AAIE,YAAA,aAAa,EAAE,KAAKQ,aAJtB;AAKE,YAAA,YAAY,EAAEP,YALhB;AAME,YAAA,WAAW,EAAEC;AANf;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAhFkD","sourcesContent":["import React from \"react\";\r\nimport ReactMapboxGl, { Layer, Feature, GeoJSONLayer } from \"react-mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport { stores } from \"./vibes\";\r\nimport Sidebar from \"./SideBar\";\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoiZGV2b25uZXciLCJhIjoiY2t0bThqZWhiMGRxNzJvbDJwazZzOWtuNCJ9.90vA89Cc_lrejzYlkLhsfw\",\r\n});\r\n\r\nconst circleLayout = { visibility: \"visible\" };\r\nconst circlePaint = {\r\n  \"circle-color\": \"white\",\r\n};\r\n\r\nconst symbolLayout = {\r\n  \"text-field\": \"{place}\",\r\n  \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\r\n  \"text-offset\": [0, 0.6],\r\n  \"text-anchor\": \"top\",\r\n};\r\nconst symbolPaint = {\r\n  \"text-color\": \"white\",\r\n};\r\n\r\nexport default class App extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: -73.935242,\r\n      lat: 40.73061,\r\n      zoom: 11.2,\r\n    };\r\n    this.onClickCircle = this.onClickCircle.bind(this);\r\n  }\r\n  center = [-73.935242, 40.73061];\r\n\r\n  onClickCircle = (evt) => {\r\n    console.log(evt);\r\n  };\r\n  // componentDidMount() {\r\n  //   const { lng, lat, zoom } = this.state;\r\n  //   const map = new mapboxgl.Map({\r\n  //     container: this.mapContainer.current,\r\n  //     style: \"mapbox://styles/mapbox/dark-v10\",\r\n  //     center: [lng, lat],\r\n  //     zoom: zoom,\r\n  //   });\r\n  //   map.on(\"move\", () => {\r\n  //     this.setState({\r\n  //       lng: map.getCenter().lng.toFixed(4),\r\n  //       lat: map.getCenter().lat.toFixed(4),\r\n  //       zoom: map.getZoom().toFixed(2),\r\n  //     });\r\n  //   });\r\n\r\n  //   map.addControl(\r\n  //     new mapboxgl.GeolocateControl({\r\n  //       positionOptions: {\r\n  //         enableHighAccuracy: true,\r\n  //       },\r\n  //       trackUserLocation: true,\r\n  //       showUserHeading: true,\r\n  //     })\r\n  //   );\r\n\r\n  //   map.on(\"load\", () => {\r\n  //     /* Add the data to your map as a layer */\r\n  //     map.addLayer({\r\n  //       id: \"locations\",\r\n  //       type: \"circle\",\r\n  //       source: {\r\n  //         type: \"geojson\",\r\n  //         data: stores,\r\n  //       },\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sidebar />\r\n        <div className=\"map\">\r\n          <Map\r\n            style=\"mapbox://styles/mapbox/dark-v10\"\r\n            containerStyle={{\r\n              height: \"100vh\",\r\n              width: \"100vw\",\r\n            }}\r\n            center={[this.state.lng, this.state.lat]}\r\n            zoom={[11.2]}\r\n          >\r\n            <GeoJSONLayer\r\n              data={stores}\r\n              circleLayout={circleLayout}\r\n              circlePaint={circlePaint}\r\n              circleOnClick={this.onClickCircle}\r\n              symbolLayout={symbolLayout}\r\n              symbolPaint={symbolPaint}\r\n            />\r\n          </Map>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}