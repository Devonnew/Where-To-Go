{"ast":null,"code":"var _jsxFileName = \"/home/devonnew/FullStack_SR_Phase/Where-To-Go/src/App.js\";\nimport React from \"react\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport SideBar from \"./SideBar\";\nimport { stores } from \"./vibes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoiZGV2b25uZXciLCJhIjoiY2t0bThqZWhiMGRxNzJvbDJwazZzOWtuNCJ9.90vA89Cc_lrejzYlkLhsfw\";\nexport default class App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -73.935242,\n      lat: 40.73061,\n      zoom: 11.2\n    };\n    this.mapContainer = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      lng,\n      lat,\n      zoom\n    } = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.on(\"move\", () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n    map.addControl(new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true,\n      showUserHeading: true\n    }));\n    map.on(\"load\", () => {\n      /* Add the data to your map as a layer */\n      map.addLayer({\n        id: \"locations\",\n        type: \"circle\",\n        source: {\n          type: \"geojson\",\n          data: stores\n        }\n      });\n    });\n\n    function flyToStore(currentFeature) {\n      map.flyTo({\n        center: currentFeature.geometry.coordinates,\n        zoom: 15\n      });\n    }\n\n    function createPopUp(currentFeature) {\n      const popUps = document.getElementsByClassName(\"mapboxgl-popup\");\n      /** Check if there is already a popup on the map and if so, remove it */\n\n      if (popUps[0]) popUps[0].remove();\n      const popup = new mapboxgl.Popup({\n        closeOnClick: false\n      }).setLngLat(currentFeature.geometry.coordinates).setHTML(`<h3>Sweetgreen</h3><h4>${currentFeature.properties.address}</h4>`).addTo(map);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.mapContainer,\n        className: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/devonnew/FullStack_SR_Phase/Where-To-Go/src/App.js"],"names":["React","mapboxgl","SideBar","stores","accessToken","App","PureComponent","constructor","props","state","lng","lat","zoom","mapContainer","createRef","componentDidMount","map","Map","container","current","style","center","on","setState","getCenter","toFixed","getZoom","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserHeading","addLayer","id","type","source","data","flyToStore","currentFeature","flyTo","geometry","coordinates","createPopUp","popUps","document","getElementsByClassName","remove","popup","Popup","closeOnClick","setLngLat","setHTML","properties","address","addTo","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport SideBar from \"./SideBar\";\r\nimport { stores } from \"./vibes\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoiZGV2b25uZXciLCJhIjoiY2t0bThqZWhiMGRxNzJvbDJwazZzOWtuNCJ9.90vA89Cc_lrejzYlkLhsfw\";\r\n\r\nexport default class App extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: -73.935242,\r\n      lat: 40.73061,\r\n      zoom: 11.2,\r\n    };\r\n    this.mapContainer = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    const { lng, lat, zoom } = this.state;\r\n    const map = new mapboxgl.Map({\r\n      container: this.mapContainer.current,\r\n      style: \"mapbox://styles/mapbox/dark-v10\",\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n    });\r\n    map.on(\"move\", () => {\r\n      this.setState({\r\n        lng: map.getCenter().lng.toFixed(4),\r\n        lat: map.getCenter().lat.toFixed(4),\r\n        zoom: map.getZoom().toFixed(2),\r\n      });\r\n    });\r\n\r\n    map.addControl(\r\n      new mapboxgl.GeolocateControl({\r\n        positionOptions: {\r\n          enableHighAccuracy: true,\r\n        },\r\n        trackUserLocation: true,\r\n        showUserHeading: true,\r\n      })\r\n    );\r\n\r\n    map.on(\"load\", () => {\r\n      /* Add the data to your map as a layer */\r\n      map.addLayer({\r\n        id: \"locations\",\r\n        type: \"circle\",\r\n        source: {\r\n          type: \"geojson\",\r\n          data: stores,\r\n        },\r\n      });\r\n    });\r\n\r\n    function flyToStore(currentFeature) {\r\n      map.flyTo({\r\n        center: currentFeature.geometry.coordinates,\r\n        zoom: 15,\r\n      });\r\n    }\r\n\r\n    function createPopUp(currentFeature) {\r\n      const popUps = document.getElementsByClassName(\"mapboxgl-popup\");\r\n      /** Check if there is already a popup on the map and if so, remove it */\r\n      if (popUps[0]) popUps[0].remove();\r\n\r\n      const popup = new mapboxgl.Popup({ closeOnClick: false })\r\n        .setLngLat(currentFeature.geometry.coordinates)\r\n        .setHTML(\r\n          `<h3>Sweetgreen</h3><h4>${currentFeature.properties.address}</h4>`\r\n        )\r\n        .addTo(map);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideBar />\r\n        <div ref={this.mapContainer} className=\"map\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}