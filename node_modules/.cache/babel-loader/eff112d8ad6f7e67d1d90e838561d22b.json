{"ast":null,"code":"var _jsxFileName = \"/home/devonnew/FullStack_SR_Phase/Where-To-Go/src/App.js\";\nimport React from \"react\";\nimport ReactMapboxGl, { Cluster, Marker, Popup } from \"react-mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { stores } from \"./vibes\";\nimport Sidebar from \"./SideBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiZGV2b25uZXciLCJhIjoiY2t0bThqZWhiMGRxNzJvbDJwazZzOWtuNCJ9.90vA89Cc_lrejzYlkLhsfw\"\n});\n_c = Map;\nconst styles = {\n  clusterMarker: {\n    width: 30,\n    height: 30,\n    borderRadius: \"50%\",\n    backgroundColor: \"#51D5A0\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"white\",\n    border: \"2px solid #56C498\",\n    cursor: \"pointer\"\n  },\n  marker: {\n    width: 10,\n    height: 10,\n    borderRadius: \"50%\",\n    backgroundColor: \"#E0E0E0\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    border: \"2px solid #C9C9C9\"\n  }\n};\nexport default class App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.center = [-73.935242, 40.73061];\n\n    this.clusterMarker = (coordinates, pointCount, getLeaves) => /*#__PURE__*/_jsxDEV(Marker, {\n      coordinates: coordinates,\n      style: styles.clusterMarker,\n      onClick: this.clusterClick.bind(this, coordinates, pointCount, getLeaves),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pointCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, coordinates.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this);\n\n    this.onClick = (coordinates, total) => {\n      // this.setState({\n      //   popup: {\n      //     coordinates,\n      //     total,\n      //   },\n      // });\n      console.log(\"hi\");\n    };\n\n    this.onMove = () => {\n      if (this.state.popup) {\n        this.setState({\n          popup: undefined\n        });\n      }\n    };\n\n    this.state = {\n      lng: -73.935242,\n      lat: 40.73061,\n      zoom: 11.2,\n      popup: undefined\n    };\n    this.onClick = this.onClick.bind(this);\n    this.onMove = this.onMove.bind(this);\n  }\n\n  render() {\n    const {\n      popup\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          style: \"mapbox://styles/mapbox/dark-v10\",\n          containerStyle: {\n            height: \"100vh\",\n            width: \"100vw\"\n          },\n          center: [this.state.lng, this.state.lat],\n          zoom: [11.2],\n          children: [stores.features.map((store, key) => /*#__PURE__*/_jsxDEV(Marker, {\n            style: styles.marker,\n            coordinates: store.geometry.coordinates,\n            \"data-feature\": store,\n            onClick: this.onClick,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: store.properties.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)), popup && /*#__PURE__*/_jsxDEV(Popup, {\n            offset: [0, -50],\n            coordinates: popup.coordinates,\n            children: [popup.leaves.map((leaf, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"HI\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)), popup.total > popup.leaves.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"And more...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/devonnew/FullStack_SR_Phase/Where-To-Go/src/App.js"],"names":["React","ReactMapboxGl","Cluster","Marker","Popup","stores","Sidebar","Map","accessToken","styles","clusterMarker","width","height","borderRadius","backgroundColor","display","justifyContent","alignItems","color","border","cursor","marker","App","PureComponent","constructor","props","center","coordinates","pointCount","getLeaves","clusterClick","bind","toString","onClick","total","console","log","onMove","state","popup","setState","undefined","lng","lat","zoom","render","features","map","store","key","geometry","properties","text","leaves","leaf","index","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactMapboxGl, { Cluster, Marker, Popup } from \"react-mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport { stores } from \"./vibes\";\r\nimport Sidebar from \"./SideBar\";\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    \"pk.eyJ1IjoiZGV2b25uZXciLCJhIjoiY2t0bThqZWhiMGRxNzJvbDJwazZzOWtuNCJ9.90vA89Cc_lrejzYlkLhsfw\",\r\n});\r\nconst styles = {\r\n  clusterMarker: {\r\n    width: 30,\r\n    height: 30,\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"#51D5A0\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n    border: \"2px solid #56C498\",\r\n    cursor: \"pointer\",\r\n  },\r\n  marker: {\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"#E0E0E0\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    border: \"2px solid #C9C9C9\",\r\n  },\r\n};\r\n\r\nexport default class App extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lng: -73.935242,\r\n      lat: 40.73061,\r\n      zoom: 11.2,\r\n      popup: undefined,\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n    this.onMove = this.onMove.bind(this);\r\n  }\r\n  center = [-73.935242, 40.73061];\r\n\r\n  clusterMarker = (coordinates, pointCount, getLeaves) => (\r\n    <Marker\r\n      key={coordinates.toString()}\r\n      coordinates={coordinates}\r\n      style={styles.clusterMarker}\r\n      onClick={this.clusterClick.bind(this, coordinates, pointCount, getLeaves)}\r\n    >\r\n      <div>{pointCount}</div>\r\n    </Marker>\r\n  );\r\n\r\n  onClick = (coordinates, total) => {\r\n    // this.setState({\r\n    //   popup: {\r\n    //     coordinates,\r\n    //     total,\r\n    //   },\r\n    // });\r\n    console.log(\"hi\");\r\n  };\r\n\r\n  onMove = () => {\r\n    if (this.state.popup) {\r\n      this.setState({ popup: undefined });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { popup } = this.state;\r\n    return (\r\n      <div>\r\n        <Sidebar />\r\n        <div className=\"map\">\r\n          <Map\r\n            style=\"mapbox://styles/mapbox/dark-v10\"\r\n            containerStyle={{\r\n              height: \"100vh\",\r\n              width: \"100vw\",\r\n            }}\r\n            center={[this.state.lng, this.state.lat]}\r\n            zoom={[11.2]}\r\n          >\r\n            {stores.features.map((store, key) => (\r\n              <Marker\r\n                key={key}\r\n                style={styles.marker}\r\n                coordinates={store.geometry.coordinates}\r\n                data-feature={store}\r\n                onClick={this.onClick}\r\n              >\r\n                <div>{store.properties.text}</div>\r\n              </Marker>\r\n            ))}\r\n            {popup && (\r\n              <Popup offset={[0, -50]} coordinates={popup.coordinates}>\r\n                {popup.leaves.map((leaf, index) => (\r\n                  <div key={index}>HI</div>\r\n                ))}\r\n                {popup.total > popup.leaves.length ? (\r\n                  <div>And more...</div>\r\n                ) : null}\r\n              </Popup>\r\n            )}\r\n          </Map>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}